from tkinter import *
import os

account_file = "account.txt"

def submit():
    entered_user = user_entry.get()
    entered_pass = pass_entry.get()

    if not os.path.exists(account_file):
        with open(account_file, "w") as f:
            f.write(entered_user + "\n" + entered_pass)
        label.config(text="Account created ‚úÖ\nRestart to log in.")
        disable_inputs()
    else:
        with open(account_file, "r") as f:
            saved_user, saved_pass = f.read().split("\n")
        if entered_user == saved_user and entered_pass == saved_pass:
            label.config(text="Access granted ‚úÖ")
            disable_inputs()
            change_user_button.config(state=NORMAL)
            change_pass_button.config(state=NORMAL)
        else:
            label.config(text="Wrong username or password ‚ùå")
            pass_entry.delete(0, END)

def toggle_password():
    if pass_entry.cget("show") == "*":
        pass_entry.config(show="")
        toggle_button.config(text="Hide Password")
    else:
        pass_entry.config(show="*")
        toggle_button.config(text="Show Password")

def change_username():
    label.config(text="Enter new username")
    user_entry.config(state=NORMAL)
    user_entry.delete(0, END)
    submit_button.config(command=save_new_username, state=NORMAL)

def save_new_username():
    new_user = user_entry.get()
    with open(account_file, "r") as f:
        _, saved_pass = f.read().split("\n")
    with open(account_file, "w") as f:
        f.write(new_user + "\n" + saved_pass)
    label.config(text="Username changed ‚úÖ")
    disable_inputs()

def change_password():
    label.config(text="Enter new password")
    pass_entry.config(state=NORMAL, show="*")
    pass_entry.delete(0, END)
    submit_button.config(command=save_new_password, state=NORMAL)

def save_new_password():
    new_pass = pass_entry.get()
    with open(account_file, "r") as f:
        saved_user, _ = f.read().split("\n")
    with open(account_file, "w") as f:
        f.write(saved_user + "\n" + new_pass)
    label.config(text="Password changed ‚úÖ")
    disable_inputs()

def reset_account():
    if os.path.exists(account_file):
        os.remove(account_file)
    label.config(text="Account reset üîÑ\nSet username and password")
    user_entry.config(state=NORMAL)
    pass_entry.config(state=NORMAL, show="*")
    user_entry.delete(0, END)
    pass_entry.delete(0, END)
    submit_button.config(command=submit, state=NORMAL)
    toggle_button.config(state=NORMAL, text="Show Password")
    change_user_button.config(state=DISABLED)
    change_pass_button.config(state=DISABLED)

def disable_inputs():
    user_entry.config(state=DISABLED)
    pass_entry.config(state=DISABLED, show="")
    submit_button.config(state=DISABLED)
    toggle_button.config(state=DISABLED)
    change_user_button.config(state=DISABLED)
    change_pass_button.config(state=DISABLED)

window = Tk()
window.geometry("500x400")
window.title("Account Program")

if not os.path.exists(account_file):
    label = Label(window, text="Set username and password", font=("Arial", 16))
else:
    label = Label(window, text="Enter username and password", font=("Arial", 16))

label.pack(pady=10)

Label(window, text="Username:", font=("Arial", 12)).pack()
user_entry = Entry(window, font=("Arial", 18))
user_entry.pack(pady=5)

Label(window, text="Password:", font=("Arial", 12)).pack()
pass_entry = Entry(window, font=("Arial", 18), show="*")
pass_entry.pack(pady=5)

toggle_button = Button(window, text="Show Password", command=toggle_password)
toggle_button.pack(pady=5)

submit_button = Button(window, text="Submit", command=submit)
submit_button.pack(pady=10)

change_user_button = Button(window, text="Change Username", command=change_username, state=DISABLED)
change_user_button.pack(pady=5)

change_pass_button = Button(window, text="Change Password", command=change_password, state=DISABLED)
change_pass_button.pack(pady=5)

reset_button = Button(window, text="Reset Account", command=reset_account)
reset_button.pack(pady=5)

window.mainloop()
