import tkinter as tk
import random
import time
import threading

# Global scores
player_score = 0
computer_score = 0
game_running = True

def Reset():
    global player_score, computer_score, game_running
    player_score = 0
    computer_score = 0
    game_running = True

    # Reset the label
    result_label.config(
        text="Press a button to play!",
        fg="black"
    )

    # Restart the timer thread
    threading.Thread(target=game_timer, daemon=True).start()

# Function to play the game
def play(user_choice):
    global player_score, computer_score

    if not game_running:
        return

    options = ['Rock', 'Paper', 'Scissors']
    computer_choice = random.choice(options)

    if user_choice == computer_choice:
        result = "It's a tie!"
    elif (user_choice == 'Rock' and computer_choice == 'Scissors') or \
         (user_choice == 'Paper' and computer_choice == 'Rock') or \
         (user_choice == 'Scissors' and computer_choice == 'Paper'):
        player_score += 1
        result = "You win this round!"
    else:
        computer_score += 1
        result = "Computer wins this round!"

    result_label.config(text=f"{result}\nYou: {player_score} | Computer: {computer_score}")

# Timer function (runs in background)
def game_timer():
    global game_running
    start_time = time.time()

    while time.time() - start_time < 10:  # run for 10 seconds (change if you want longer)
        time.sleep(1)

    game_running = False
    if player_score > computer_score:
        winner = "You won the game!"
        color = "green"
    elif computer_score > player_score:
        winner = "Computer won the game!"
        color = "red"
    else:
        winner = "It's a tie!"
        color = "orange"

    result_label.config(
        text=f"Timeâ€™s up!\nFinal Score -> You: {player_score} | Computer: {computer_score}\n{winner}",
        fg=color
    )


# GUI setup
window = tk.Tk()
window.title("Rock Paper Scissors")

result_label = tk.Label(window,
                        text="Press a button to play!",
                        font=("Arial", 12))
result_label.pack(pady=10)

frame = tk.Frame(window)
frame.pack()

rock_btn = tk.Button(frame,
                     text="Rock",
                     width=10,
                     command=lambda: play("Rock"))

paper_btn = tk.Button(frame,
                      text="Paper",
                      width=10,
                      command=lambda: play("Paper"))

scissors_btn = tk.Button(frame,
                        text="Scissors",
                        width=10,
                        command=lambda: play("Scissors"))

rock_btn.grid(row=0,
              column=0,
              padx=5)

paper_btn.grid(row=0,
               column=1,
               padx=5)

scissors_btn.grid(row=0,
                  column=2,
                  padx=5)

reset_btn = tk.Button(frame,
                      text="Reset Game",
                      width=15,
                      bg="red",
                      command=Reset
                      )
reset_btn.grid(row=1,
               column=1,
               padx=5,
               pady=10)


# Start the timer in background
threading.Thread(target=game_timer,
                 daemon=True).start()

window.mainloop()
